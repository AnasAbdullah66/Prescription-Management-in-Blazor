// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrescrioptionManagement.Server.Models;

#nullable disable

namespace PrescrioptionManagement.Server.Migrations
{
    [DbContext(typeof(PrescriptionDbContext))]
    [Migration("20230303182654_Pre")]
    partial class Pre
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PrescrioptionManagement.Server.Models.MedicalTest", b =>
                {
                    b.Property<int>("MedicalTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalTestId"), 1L, 1);

                    b.Property<string>("MedicalTestName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicalTestId");

                    b.ToTable("MedicalTests");
                });

            modelBuilder.Entity("PrescrioptionManagement.Server.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"), 1L, 1);

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Followup")
                        .HasColumnType("bit");

                    b.Property<int>("PatientAge")
                        .HasColumnType("int");

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PrescribedDate")
                        .HasColumnType("date");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PrescrioptionManagement.Server.Models.TestEntry", b =>
                {
                    b.Property<int>("TestEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestEntryId"), 1L, 1);

                    b.Property<int>("MedicalTestId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("TestEntryId");

                    b.HasIndex("MedicalTestId");

                    b.HasIndex("PatientId");

                    b.ToTable("TestEntries");
                });

            modelBuilder.Entity("PrescrioptionManagement.Server.Models.TestEntry", b =>
                {
                    b.HasOne("PrescrioptionManagement.Server.Models.MedicalTest", "MedicalTest")
                        .WithMany("TestEntries")
                        .HasForeignKey("MedicalTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrescrioptionManagement.Server.Models.Patient", "Patient")
                        .WithMany("TestEntries")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicalTest");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("PrescrioptionManagement.Server.Models.MedicalTest", b =>
                {
                    b.Navigation("TestEntries");
                });

            modelBuilder.Entity("PrescrioptionManagement.Server.Models.Patient", b =>
                {
                    b.Navigation("TestEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
